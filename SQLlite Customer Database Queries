SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

// In this query, I extracted the amount of orders from January being sure to exclude the orders without order ids. This resulted in 9681 orders in from January. //

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND orderid <> 'Order ID'
AND length(orderid) = 6
;

// This query was used to find out how many of the sales from the previous were iPhone sales. //

SELECT DISTINCT acctnum
FROM customers
INNER JOIN FebSales
ON OrderID = order_id
WHERE length(orderid) = 6
AND
orderid <> 'Order ID';

// This query produced the ccount numbers that placed orders in the month of February. //

SELECT DISTINCT product, price
FROM JanSales
ORDER BY price ASC
LIMIT 1;

// This query produced the lowest priced item sold in January. // 

SELECT product, SUM(quantity)*price as revenue
FROM JanSales
GROUP BY product
;

// This query was used to determine the total revenue for each product in the month of January. //

SELECT Product, SUM(Quantity) AS Sold, SUM(Quantity)*price AS Revenue
FROM FebSales
WHERE location LIKE '548 Lincoln St%'
GROUP BY product;

// This query produced the product, number of products, and the total revenue of products sold to the location 548 Lincoln St, Seattle, WA 98101. //

SELECT COUNT(DISTINCT acctnum) as Account, AVG(Quantity*price) AS Spent
FROM FebSales
LEFT JOIN customers
ON "OrderID" = "order_id"
WHERE Quantity > 2
AND
acctnum NOT NULL
AND
length(orderid) = 6
AND
orderid <> "Order ID";

// This query was used to determine how many customers bought more than 2 products and the average spent for all customers who purchased more than 2 products. //

SELECT DISTINCT Product, SUM(Quantity)
FROM FebSales
WHERE orderdate LIKE '02/%'
AND location LIKE '%Los Angeles%'
GROUP BY Product;

// This query was performed to determine the products and amount of each product sold in Los Angeles in the month of February. //

SELECT DISTINCT location, Count(orderID)
FROM JanSales
WHERE location LIKE '%, NY%'
GROUP BY location
HAVING Count(orderID) >= 3;

// This query produced the locations in New York that have received a minimum of 3 orders in January along with the number of orders for each location. //

SELECT Product, SUM(Quantity)
FROM FebSales
WHERE Product LIKE '%Headphone%'
GROUP BY Product;

// This query produced how many of each type of headphones were sold in February. //

SELECT SUM(Quantity*price)/COUNT(acctnum)
FROM FebSales
LEFT JOIN customers
ON "orderID" = "order_id"

// This query produced the average amount spent per account in February. //

SELECT SUM(Quantity)/COUNT(acctnum)
FROM FebSales
LEFT JOIN customers
ON "OrderID" = "order_id"
WHERE orderID <> "Order ID"
AND length(orderID) = 6
;

// This query produced the average quantity of products purchased per account in February factoring out the orders that didn't have an order ID or an order ID
   that was incorrectly inputted. //

SELECT Product, SUM(Quantity*price)
FROM JanSales
WHERE orderID <> "Order ID"
AND length(orderID) = 6
GROUP BY Product
ORDER BY SUM(Quantity*price) DESC
LIMIT 1;

//  The data pulled from the above query shows which product brought in the most revenue in January and the total revenue it brought in. //
